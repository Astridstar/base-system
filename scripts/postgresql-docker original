#!/bin/bash

DATA_DIR=/data/storage/postgresql/pgdata
POSTGRES_USER=admin 
POSTGRES_PASSWORD=SuperSecret

PG_DATA_DIR=/data/storage/pgadmin/data
PGADMIN_DEFAULT_EMAIL="user@example.com"
PGADMIN_DEFAULT_PASSWORD=Somerandompassword

PGSQL_CONTAINER_NAME=postgresql
PGADSMIN_CONTAINER_NAME=pgadmin

postgres_preflight_check() {
    if [ ! -d $DATA_DIR ]; then
        echo "Data Directory [$DATA_DIR] doesn't exist, Creating a new one now....."
        mkdir -p $DATA_DIR
    fi
    
}
pgadmin_preflight_check() {

    if [ ! -d $PG_DATA_DIR ]; then
    echo "Data Directory [$PG_DATA_DIR] doesn't exist, Creating a new one now....."
    mkdir -p $PG_DATA_DIR
    fi
    
}

start_postgres() {
    echo "Starting PostgreSQL container now....."
    docker run -d --name $PGSQL_CONTAINER_NAME \
        --add-host "host.docker.internal:host-gateway" \
        -p 5432:5432 \
        -v $DATA_DIR:/var/lib/postgresql/data \
        -e PGDATA=$DATA_DIR \
        -e POSTGRES_USER=$POSTGRES_USER \
        -e POSTGRES_PASSWORD=$POSTGRES_PASSWORD \
        postgres:17-bullseye
}

start_pgadmin() {
    echo "Starting PGAdmin container now....."
    docker run -d --name $PGADSMIN_CONTAINER_NAME -p 80:80 \
        --add-host "host.docker.internal:host-gateway" \
        -v $PG_DATA_DIR:/var/lib/pgadmin \
        -e PGADMIN_DEFAULT_EMAIL=$PGADMIN_DEFAULT_EMAIL \
        -e PGADMIN_DEFAULT_PASSWORD=$PGADMIN_DEFAULT_PASSWORD \
        dpage/pgadmin4:8.12.0       
}

stop_postgres() {
    echo "Stopping PostgreSQL container now....."
    docker container stop $PGSQL_CONTAINER_NAME
    docker container rm $PGSQL_CONTAINER_NAME
}

stop_pgadmin() {
    echo "Stopping PGAdmin container now....."
    docker container stop $PGADSMIN_CONTAINER_NAME
    docker container rm $PGADSMIN_CONTAINER_NAME
}

delete_postgres() {
    echo "Deleting PostgreSQL container now....."
    stop_postgres

    if [ -d $DATA_DIR ]; then
        echo "Cleaning upData Directory [$DATA_DIR] doesn't exist."
        rm -rf $DATA_DIR
    fi    
}

delete_pgadmin() {
    echo "Deleting PGAdmin container now....."
    stop_pgadmin
    if [ -d $PG_DATA_DIR ]; then
        echo "Cleaning upData Directory [$PG_DATA_DIR] doesn't exist."
        rm -rf $PG_DATA_DIR
    fi      
}


# check if command line argument is empty or not present
if [ -z $1 ]; 
then
    echo "No arguement provided to determine to start/stop/delete the container"
    exit 0
fi

case "$1" in
    "stop")
        stop_pgadmin
        stop_postgres ;;
    "start")
        postgres_preflight_check
        pgadmin_preflight_check    
        start_postgres
        start_pgadmin ;;
    "delete")
        delete_postgres
        delete_pgadmin ;;
esac
